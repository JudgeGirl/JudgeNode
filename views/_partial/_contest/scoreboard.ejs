<meta http-equiv="refresh" content="30" />

<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css">
<script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>

<div class="header">
	<h1 class='article-title'>Scoreboard</h1>
	<h2> Contest. <%- table_config.cid %> <%- table_config.icpc.contest.ttl %></h2>
</div>
<div class="content">
	<div class="pure-g">
        <%
            let problemNumber = table_config.header.length;
            let enableSummary = table_config.summaryChartData !== null;
            if (enableSummary) {
        %>
                <div class="pure-u-1-1"><div id="bar-progress-summary"></div></div>
                <div class="pure-u-1-1"><h4 style='text-align: center;'>Total Score</h4></div>
        <% } %>
		<%
            let problemScoreDistribution = table_config.problemScoreDistribution;
            for (let row = 0; row < problemNumber / 2; row++) {
        %>
			<%
                let chartI = row * 2;
                if (chartI != problemNumber - 1) {
                    // not the last row of odds items
			%>
                    <div class="pure-u-1-2"><div id="bar-progress<%= chartI %>"></div></div>
                    <div class="pure-u-1-2"><div id="bar-progress<%= chartI + 1 %>"></div></div>
                    <div class="pure-u-1-2"><h4 style='text-align: center;'><%- problemScoreDistribution[chartI].title %></h4></div>
                    <div class="pure-u-1-2"><h4 style='text-align: center;'><%- problemScoreDistribution[chartI + 1].title %></h4></div>
			<%
                } else {
			%>
                    <div class="pure-u-1-2"><div id="bar-progress<%= chartI %>"></div></div>
                    <div class="pure-u-1-2"></div>
                    <div class="pure-u-1-2"><h4 style='text-align: center;'><%- problemScoreDistribution[chartI].title %></h4></div>
                    <div class="pure-u-1-2"></div>
			<% } %>
		<% } %>
	</div>
	<table class="pure-table pure-table-bordered" >
		<thead>
			<tr>
				<th style="width: 15%;">Score</th>
                <%
                    var width = 85 / Math.max(problemNumber, 1);
                    let problemScoreTable = table_config.scoreTable;
                    for (let col = 0; col < problemScoreTable.tableCols.length; col++) {
                        let pid = problemScoreTable.tableCols[col].pid;
                        let title = problemScoreTable.tableCols[col].title;
                %>
                    <th style="width:<%- width %>%"><a href="<%= site.url_for('problem/' + table_config.cid + '/' + pid) %>"><%= pid %>. <%- title %></a></th>
                <% } %>
			</tr>
		</thead>
		<tbody>
			<%
				var alluser = {};
				for (var i = 0; i < table_config.user.length; i++)
					alluser[table_config.user[i].uid] = 0;
			 %>
			<% for (var row = 0; row < table_config.scorekind.length; row++) { %>
			<tr class="normal">
				<td><%- table_config.scorekind[row].max_res %></td>
				<% for (let col = 0; col < problemNumber; col++) { %>
					<%
						for (var i = 0; i < table_config.stats.length; i++) {
							alluser[table_config.stats[i].uid] = 0;
						}
					%>
					<td><%= problemScoreTable['tableCols'][col]['scoreList'][row] %></td>
				<% } %>
			</tr>
			<% } %>
			<tr class="normal">
				<td>Attendance</td>
				<% for (var col = 0; col < problemNumber; col++) { %>
					<td><%= problemScoreTable['tableCols'][col]['attendance'] %></td>
				<% } %>
			</tr>
            <tr class="normal">
				<td>Average</td>
                <% for (let col = 0; col < problemNumber; col++) { %>
                    <td><%- (problemScoreTable['tableCols'][col].average).toFixed(2) %></td>
                <% } %>
            </tr>
			<tr class="normal">
				<td>Attendance</td>
				<td colspan='<%- problemNumber %>'><%- problemScoreTable.totalAttendance %></td>
			</tr>
            <% if (problemNumber > 1) { %>
                <tr class="normal">
                    <td>Average</td>
                    <td colspan='<%- problemNumber %>'><%- (problemScoreTable.totalAverage).toFixed(2) %></td>
                </tr>
            <% } %>
		</tbody>
	</table>
	<script>
		<%
            for (var i = 0; i < problemNumber; i++) {
                data = JSON.stringify(problemScoreDistribution[i].chartData);
        %>
                Morris.Bar({
                  element: 'bar-progress<%- i %>',
                  data: <%- data %>,
                  xkey: 'score',
                  ykeys: ['user'],
                  labels: ['#users'],
                  yLabelFormat: function(y){return y != Math.round(y)?'':y;} // hide non interger label
                });
		<% } %>

        <%
            if (enableSummary) {
                let summaryChartDataJson = JSON.stringify(table_config.summaryChartData);
        %>
                Morris.Bar({
                  element: 'bar-progress-summary',
                  data: <%- summaryChartDataJson %>,
                  xkey: 'score',
                  ykeys: ['user'],
                  labels: ['#users'],
                  yLabelFormat: function(y){return y != Math.round(y)?'':y;},
                  barColors: ['CadetBlue']
                });
        <% } %>
	</script>
	<% if (user["uid"] >= 0 && user["class"] == null) { %>
		<h2>Grade</h2>
		<table id='grade-table' class="pure-table pure-table-bordered" border="1">
			<thead>
				<tr>
					<th data-type="string" data-sortable="true" data-name="User" style="width: 15%;"></th>
					<% var width = 85 / Math.max(problemNumber, 1); %>
					<% for (var row = 0; row < problemNumber; row++) { %>
						<th data-type="string" data-sortable="true" data-name="P<%- String.fromCharCode(65 + row)  %>"></th>
						<th data-type="int" data-sortable="true" data-name="Score">Score</th>
					<% } %>
				</tr>
			</thead>
			<tbody>
				<%
					var alluser = {}, firstkill_ts = {};
					for (var i = 0; i < table_config.user.length; i++)
						alluser[table_config.user[i].uid] = {};
					for (var i = 0; i < table_config.stats.length; i++)
						alluser[table_config.stats[i].uid] = {};
					for (var i = 0; i < table_config.grade.length; i++) {
						if (alluser[table_config.grade[i].uid] == undefined)
							continue;
						alluser[table_config.grade[i].uid][table_config.grade[i].pid] = table_config.grade[i];
					}
				%>
				<%
					for (var i in table_config.icpc.ac) {
						if (alluser[table_config.icpc.ac[i].uid] == undefined)
							continue;
						var uid = table_config.icpc.ac[i].uid;
						var pid = table_config.icpc.ac[i].pid;
						if (alluser[uid][pid] == undefined)
							alluser[uid][pid] = {};
						alluser[uid][pid].ac = table_config.icpc.ac[i].ts;
						if (firstkill_ts[table_config.icpc.ac[i].pid] == undefined ||
							table_config.icpc.ac[i].ts < firstkill_ts[table_config.icpc.ac[i].pid])
							firstkill_ts[table_config.icpc.ac[i].pid] = table_config.icpc.ac[i].ts;
					}
				%>
				<%
					for (var i in table_config.icpc.wa) {
						if (alluser[table_config.icpc.wa[i].uid] == undefined)
							continue;
						var uid = table_config.icpc.wa[i].uid;
						var pid = table_config.icpc.wa[i].pid;
						if (alluser[uid][pid] == undefined)
							alluser[uid][pid] = {}
						alluser[uid][pid].wa = table_config.icpc.wa[i].wa;
					}

				 %>
				<% for (var row = 0; row < table_config.user.length; row++) { %>
				<tr style="height: 4.4em;">
					<td><a href="<%= site.url_for('user/' + table_config.user[row].uid) %>"><%- table_config.user[row].lgn %></a></td>
					<% for (var col = 0; col < problemNumber; col++) { %>
						<%
							if (alluser[table_config.user[row].uid][table_config.header[col].pid] != undefined) {
								var score = alluser[table_config.user[row].uid][table_config.header[col].pid]['MAX(scr)'];
								var times = alluser[table_config.user[row].uid][table_config.header[col].pid]['COUNT(*)'];
								var ac = alluser[table_config.user[row].uid][table_config.header[col].pid]['ac'];
								var wa = alluser[table_config.user[row].uid][table_config.header[col].pid]['wa'];
						%>
								<%
									var filter = 'cid=' + table_config.cid;
									filter += '&uid=' + table_config.user[row].uid;
								%>
								<td style="text-align: center; <%- ac == firstkill_ts[table_config.header[col].pid] ? "background: pink;" : "" %>"><a href="<%= site.url_for('submissions?' + filter) %>" style="color: <%- score == 100 ? "green" : "red" %>">
								<% if (score != 100) { %>
									-<%- times %>
								<% } else { %>
									+<%- wa == undefined ? "" : wa %><br/><%- Math.floor((ac-table_config.icpc.contest.ts1)/1000/60) %>
								<% } %>
								</a></td>
								<td><%- score %></td>
						<% } else { %>
							<td> -- </td>
							<td> 0 </td>
						<% } %>
					<% } %>
				</tr>
				<% } %>
		</table>
		<script>
function sortTable(tag_id, column, type, cmp) {
    var tbl = document.getElementById(tag_id).tBodies[0];
    var store = [];
    for(var i=0, len=tbl.rows.length; i<len; i++){
        var row = tbl.rows[i];
        var sortnr;
        if (type == 'int') {
        	sortnr = parseFloat(row.cells[column].textContent || row.cells[column].innerText);
        	if(!isNaN(sortnr)) store.push([sortnr, row]);
        } else if (type == 'string') {
        	sortnr = row.cells[column].textContent || row.cells[column].innerText;
        	store.push([sortnr, row]);
        }
    }
    if (type == 'int') {
    	if (cmp == 0) {
	    	store.sort(function(x,y) {
	        	return y[0] - x[0];
	    	});
    	} else {
    		store.sort(function(x,y) {
	        	return x[0] - y[0];
	    	});
    	}
    } else if (type == 'string') {
    	if (cmp == 0) {
    		store.sort(function(x,y) {
	        	return y[0] < x[0] ? 1 : -1;
    		});
    	} else {
    		store.sort(function(x,y) {
	        	return y[0] < x[0] ? -1 : 1;
    		});
    	}
    }
    for(var i=0, len=store.length; i<len; i++){
        tbl.appendChild(store[i][1]);
    }
    store = null;
}
sortTable('grade-table', 0, 'string', 0);
$('#grade-table thead tr').find('th').each(function(index, value) {
	var sortable = $(value).attr('data-sortable');
	if (sortable != undefined && sortable == "true") {
		var type = $(value).attr('data-type');
		var name = $(value).attr('data-name');
		$(value).html(name + ' <i class="fa fa-caret-up"></i>');
		$(value).css('cursor', 'pointer');
		$(value).attr('data-sort', '0');
		$(value).click(function() {
			var cmp = $(value).attr('data-sort');
			if (cmp == "1") {
				sortTable('grade-table', index, type, 1);
				$(value).attr('data-sort', "0");
				var name = $(value).attr('data-name');
				$(value).html(name + ' <i class="fa fa-caret-up"></i>');
			} else {
				sortTable('grade-table', index, type, 0);
				$(value).attr('data-sort', "1");
				var name = $(value).attr('data-name');
				$(value).html(name + ' <i class="fa fa-caret-down"></i>');
			}
		});
	}
});
		</script>
	<% } %>
</div>
