<script type="text/javascript" src="<%= site.url_for('javascripts/marked.js') %>"></script>
<script type="text/javascript" src="<%= site.url_for('javascripts/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML') %>"></script>
<script src="<%= site.url_for('javascripts/sh/scripts/shCore.js') %>" type="text/javascript"></script>
<script src="<%= site.url_for('javascripts/sh/scripts/shBrushPlain.js') %>" type="text/javascript"></script>
<script src="<%= site.url_for('javascripts/sh/scripts/shBrushCpp.js') %>" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="<%= site.url_for('stylesheets/shThemeDefault.css') %>">


<script src="<%= site.url_for('javascripts/codemirror-5.18.2/lib/codemirror.js') %>" type="text/javascript"></script>
<script src="<%= site.url_for('javascripts/codemirror-5.18.2/addon/fold/foldcode.js') %>"></script>
<script src="<%= site.url_for('javascripts/codemirror-5.18.2/addon/fold/foldgutter.js') %>"></script>
<script src="<%= site.url_for('javascripts/codemirror-5.18.2/addon/fold/brace-fold.js') %>"></script>
<script src="<%= site.url_for('javascripts/codemirror-5.18.2/addon/fold/xml-fold.js') %>"></script>
<script src="<%= site.url_for('javascripts/codemirror-5.18.2/addon/fold/markdown-fold.js') %>"></script>
<script src="<%= site.url_for('javascripts/codemirror-5.18.2/addon/fold/comment-fold.js') %>"></script>
<script src="<%= site.url_for('javascripts/codemirror-5.18.2/addon/display/fullscreen.js') %>"></script>
<script src="<%= site.url_for('javascripts/codemirror-5.18.2/mode/markdown/markdown.js') %>"></script>

<link rel="stylesheet" type="text/css" href="<%= site.url_for('javascripts/codemirror-5.18.2/lib/codemirror.css') %>"></style>
<link rel="stylesheet" href="<%= site.url_for('javascripts/codemirror-5.18.2/addon/fold/foldgutter.css') %>">
<link rel="stylesheet" href="<%= site.url_for('javascripts/codemirror-5.18.2/theme/monokai.css') %>">
<link rel="stylesheet" href="<%= site.url_for('javascripts/codemirror-5.18.2/addon/display/fullscreen.css') %>">
<style>
.CodeMirror {
  border: 1px solid #eee;
  min-height: 800px;
}
</style>

<div class="header">
	<h1 class='article-title'><%= __('Edit Problem') %></h1>
    <h2><%= prob_config.config.pid %>. <%= prob_config.config.ttl %></h2>
</div>
<div class="content">
	<%- include('../_partial/widget/nav')%>

<form action="<%= site.url_for('admin/update/problem/' + pid) %>" method="post" class="pure-form pure-form-stacked">
    <fieldset>
        <div class="pure-g">
            <div class="pure-u-1-1">
               <legend>Problem Config</legend>

               <div class="pure-g">
                    <div class="pure-u-1-2">
                        <label for="pid"><%= __('Problem ID') %></label>
                        <input class="pure-u-23-24" type="text" name="pid" id="pid" style="opacity: 0.5;" value="<%- prob_config.config.pid %>" disabled/>
                    </div>
                    <div class="pure-u-1-2">
                        <label for="pub"><%= __('View Public/Private') %></label>
                        <select name="pub" class="pure-u-23-24">
                            <option value="1" <%- prob_config.config.pub == 1 ? "selected" : "" %> > <%= __('Public') %> </option>
                            <option value="0" <%- prob_config.config.pub == 0 ? "selected" : "" %> > <%= __('Private') %> </option>
                        </select>
                    </div>
                    <div class="pure-u-4-5">
                        <label for="ttl"><%= __('Problem Title') %></label>
                        <input class="pure-u-23-24" type="text" name="ttl" id="ttl" class="pure-input-1" value="<%= prob_config.config.ttl %>">
                    </div>
                    <div class="pure-u-1-5">
                        <label for="cyclomatic_complexity"><%= __('Cyclomatic Complexity') %></label>
                        <input class="pure-u-21-24" type="text" name="cyclomatic_complexity" id="cyclomatic_complexity" class="pure-input-1" value="<%= prob_config.config.standard_cyclomatic_complexity %>">
                    </div>
                </div>
            </div>
        </div>
        <div class="pure-g">
            <div class="pure-u-1-1">
                <legend>Category</legend>
                <div class="pure-g">
                    <div class="pure-u-1-3">
                        <label for="level"><%= __('Difficult Level') %></label>
                        <input type="text" class="pure-u-23-24" name="level" id="level" value="<%- prob_config.config.level %>">
                    </div>
                    <div class="pure-u-1-3">
                        <label for="porder"><%= __('Level Order') %></label>
                        <input type="text" class="pure-u-23-24" name="porder" id="porder" value="<%- prob_config.config.porder %>">
                    </div>
                    <div class="pure-u-1-3">
                        <label for="porder"><%= __('Dependency') %></label>
                        <%
                            var depend_arr = [];
                            for (var i in prob_config.dependency) {
                                depend_arr.push(prob_config.dependency[i].depend_pid);
                            }
                        %>
                        <input type="text" class="pure-u-23-24" name="dependency" id="dependency" value="<%- depend_arr.join(",") %>">
                    </div>
                </div>
            </div>
        </div>
    <div class="tab_container">

        <input id="tab1" type="radio" name="tabs" checked>
        <label for="tab1"><i class="fa fa-code"></i><span> Problem Markdown</span></label>

        <input id="tab2" type="radio" name="tabs">
        <label for="tab2"><i class="fa fa-pencil-square-o"></i><span> Problem Preview</span></label>

        <input id="tab3" type="radio" name="tabs">
        <label for="tab3"><i class="fa fa-code"></i><span> Solution Markdown</span></label>

        <input id="tab4" type="radio" name="tabs">
        <label for="tab4"><i class="fa fa-pencil-square-o"></i><span> Solution Preview</span></label>

        <section id="content1" class="tab-content">
            <textarea name="textbox" id="textbox" class="pure-input-1" style="font-family: Courier, Courier New, Microsoft JhengHei, MingLiU; min-height: 800px;"><%= prob_config.md %></textarea>
        </section>
        <section id="content2" class="tab-content">
            <div class="pure-u-1-1" id="preview-textbox" style="border-color: #f0f0f0; border-style: solid; min-height: 512px;">
            </div>
        </section>
        <section id="content3" class="tab-content">
            <textarea name="textbox2" id="textbox2" class="pure-input-1" style="font-family: Courier, Courier New, Microsoft JhengHei, MingLiU; min-height: 800px;"><%= prob_config.solution_md %></textarea>
        </section>
        <section id="content4" class="tab-content">
            <div class="pure-u-1-1" id="preview-textbox2" style="border-color: #f0f0f0; border-style: solid; min-height: 512px;">
            </div>
        </section>
    </div>
        <div class="pure-g">
            <div class="pure-u-1-1">
        		<div class="pure-controls">
                	<button type="submit" name="submit" id="submit" class="pure-button pure-button-primary button-warning"><%= __('Update') %></button>
                </div>
            </div>
        </div>

        <div class="pure-g">
            <div class="pure-u-1-1">

            </div>
        </div>
    </fieldset>
</form>

</div>

<script>
$(document).delegate('#textbox', 'keydown', function(e) {
  var keyCode = e.keyCode || e.which;

  if (keyCode == 9) {
    e.preventDefault();
    var start = $(this).get(0).selectionStart;
    var end = $(this).get(0).selectionEnd;

    // set textarea value to: text before caret + tab + text after caret
    $(this).val($(this).val().substring(0, start)
                + "\t"
                + $(this).val().substring(end));

    // put caret at right position again
    $(this).get(0).selectionStart =
    $(this).get(0).selectionEnd = start + 1;
  }
});
$(document).delegate('#textbox2', 'keydown', function(e) {
  var keyCode = e.keyCode || e.which;

  if (keyCode == 9) {
    e.preventDefault();
    var start = $(this).get(0).selectionStart;
    var end = $(this).get(0).selectionEnd;

    // set textarea value to: text before caret + tab + text after caret
    $(this).val($(this).val().substring(0, start)
                + "\t"
                + $(this).val().substring(end));

    // put caret at right position again
    $(this).get(0).selectionStart =
    $(this).get(0).selectionEnd = start + 1;
  }
});

//
function latex_filter(text) {
    var out = text.replace(/(\${1,2})((?:\\.|[^$])*)\1/g, function(m) {
        m = m.replace(/_/g, '\\_')
             .replace(/</g, '\\lt ')
             .replace(/\|/g, '\\vert ')
             .replace(/\[/g, '\\lbrack ')
             .replace(/\\{/g, '\\lbrace ')
             .replace(/\\}/g, '\\rbrace ')
             .replace(/\\\\/g, '\\\\\\\\');
        return m;
    });
    return out;
};
function after_footer() {
    var math;
    math = document.getElementById("preview-textbox");
    MathJax.Hub.Queue(["Typeset",MathJax.Hub,math]);

    math = document.getElementById("preview-textbox2");
    MathJax.Hub.Queue(["Typeset",MathJax.Hub,math]);
};
function render() {
    var renderer = new marked.Renderer();

    renderer.code = function (code, language) {
        if (!language)  language = 'plain';
        return '<pre class="brush: ' + language + ';">' + code + '</pre>';
    };
    var html = $("#textbox").val();
    html = latex_filter(html);
    $("#preview-textbox").html(marked(html, { renderer: renderer })).promise().done(function() {
        after_footer();
    });
    html = $("#textbox2").val();
    html = latex_filter(html);
    $("#preview-textbox2").html(marked(html, { renderer: renderer })).promise().done(function() {
        after_footer();
    });
};
$("#tab2").click(function() {
    if ($(this).is(':checked'))
        render();
});
$("#tab4").click(function() {
    if ($(this).is(':checked'))
        render();
});

var list = document.getElementsByTagName("form");
for (var i = 0; i < list.length; i++) {
    list[i].addEventListener("submit", function(event){
        var answer = confirm("Make sure that problem setting as you want.");
        if (!answer){ event.preventDefault(); }
    });
}

var aElems = document.getElementsByTagName('a');

for (var i = 0; i < aElems.length; i++) {
    aElems[i].onclick = function() {
        var check = confirm("Are you sure you want to leave?");
        if (check == true) {
            return true;
        }
        else {
            return false;
        }
    };
}

window.onload = function() {
    function editor(ids)
    {
      var te_markdown = [];
      var n = ids.length;
      for (var i = 0; i < n; i++)
        te_markdown.push(document.getElementById(ids[i]));
      window.editor_markdown = [];
      for (var i = 0; i < n; i++) {
        window.editor_markdown.push(CodeMirror.fromTextArea(te_markdown[i], {
            mode: "markdown",
            lineNumbers: true,
            lineWrapping: true,
            extraKeys: {"Ctrl-Q": function(cm){ cm.foldCode(cm.getCursor()); }},
            foldGutter: true,
            gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
            theme: "monokai",
            extraKeys: {
                "F11": function(cm) {
                  cm.setOption("fullScreen", !cm.getOption("fullScreen"));
                  if (cm.getOption("fullScreen"))
                    $('#menu').hide();
                  else
                    $('#menu').show();
                },
                "Esc": function(cm) {
                  if (cm.getOption("fullScreen")) cm.setOption("fullScreen", false);
                  $('#menu').show();
                }
              }
        }));
      }
      for (var i = 0; i < n; i++) {
        window.editor_markdown[i].refresh();;
      }
      window.editor_markdown[0].on("change", function() {
            te_markdown[0].value = window.editor_markdown[0].getValue();
      });
      window.editor_markdown[1].on("change", function() {
            te_markdown[1].value = window.editor_markdown[1].getValue();
      });
    }
    editor(['textbox', 'textbox2']);
};
</script>
